Grammar

    0 $accept: stmt $end

    1 stmt: expr '\n'

    2 expr: expr '+' NUMBER
    3     | expr '-' NUMBER
    4     | NUMBER


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 1
'+' (43) 2
'-' (45) 3
error (256)
NUMBER (258) 2 3 4


Nonterminals, with rules where they appear

$accept (7)
    on left: 0
stmt (8)
    on left: 1, on right: 0
expr (9)
    on left: 2 3 4, on right: 1 2 3


State 0

    0 $accept: . stmt $end

    NUMBER  shift, and go to state 1

    stmt  go to state 2
    expr  go to state 3


State 1

    4 expr: NUMBER .

    $default  reduce using rule 4 (expr)


State 2

    0 $accept: stmt . $end

    $end  shift, and go to state 4


State 3

    1 stmt: expr . '\n'
    2 expr: expr . '+' NUMBER
    3     | expr . '-' NUMBER

    '\n'  shift, and go to state 5
    '+'   shift, and go to state 6
    '-'   shift, and go to state 7


State 4

    0 $accept: stmt $end .

    $default  accept


State 5

    1 stmt: expr '\n' .

    $default  reduce using rule 1 (stmt)


State 6

    2 expr: expr '+' . NUMBER

    NUMBER  shift, and go to state 8


State 7

    3 expr: expr '-' . NUMBER

    NUMBER  shift, and go to state 9


State 8

    2 expr: expr '+' NUMBER .

    $default  reduce using rule 2 (expr)


State 9

    3 expr: expr '-' NUMBER .

    $default  reduce using rule 3 (expr)
